[
    {
        "id": "c8b302ecab9126ef",
        "type": "tab",
        "label": "Dashboard 2.0",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6bdeed4c911a4f0d",
        "type": "group",
        "z": "c8b302ecab9126ef",
        "name": "RFID reading",
        "style": {
            "label": true
        },
        "nodes": [
            "3bd0488aadbf561c",
            "5ea0e0cb4213621b",
            "27e4b7598d5cf415",
            "601cc5a41907f055",
            "07ac7b177d155a3f",
            "502ebdeb3aa19a6e",
            "b0d51d5e404ea218",
            "cb146e4734dd3c4b",
            "70fc9b47bdc6f606",
            "391994193fadc14b",
            "363571e66386a051",
            "194b76430657fb59"
        ],
        "x": 134,
        "y": 119,
        "w": 1712,
        "h": 302
    },
    {
        "id": "915a2d584c24d2c9",
        "type": "group",
        "z": "c8b302ecab9126ef",
        "name": "Real Time",
        "style": {
            "label": true
        },
        "nodes": [
            "1e2cfd022475fa8c",
            "76d4ac5f7af7eefa",
            "74bda8dec789202c",
            "715e6023211d2cb6",
            "96c3de74874e3d7e",
            "ae6cf08452c725d7",
            "b3b7167e58b584e2"
        ],
        "x": 174,
        "y": 539,
        "w": 1152,
        "h": 142
    },
    {
        "id": "770286e3d1c7a053",
        "type": "group",
        "z": "c8b302ecab9126ef",
        "name": "Set flow variables",
        "style": {
            "label": true
        },
        "nodes": [
            "7e51c5ae0c1632d6",
            "617e259f288aecab",
            "57094e99300d0069",
            "aaabd3f78d516240",
            "0e39798716b74694",
            "e9e6b70ee0f9419f",
            "1359ed7e1f12049c",
            "3b3246ce2b8f50d8",
            "60748ae584709fa8",
            "03870448300d9c2c"
        ],
        "x": 1774,
        "y": 599,
        "w": 972,
        "h": 262
    },
    {
        "id": "b13a37b40a5db1bf",
        "type": "group",
        "z": "c8b302ecab9126ef",
        "name": "Reset flow varaibles",
        "style": {
            "label": true
        },
        "nodes": [
            "e0b9f96e58ea19a3",
            "94dd57e04b45d3b7",
            "56586c4278158ee4"
        ],
        "x": 1734,
        "y": 479,
        "w": 762,
        "h": 82
    },
    {
        "id": "285efb983012b133",
        "type": "group",
        "z": "c8b302ecab9126ef",
        "name": "ESP Location wise",
        "style": {
            "label": true
        },
        "nodes": [
            "22372ecad94a7938",
            "69af323c11bbf3ae",
            "b156db3e5306c31f",
            "a42bb2e509bebd40",
            "5c76309021735119",
            "e073d44630296bec",
            "48eed64bbf3ca1fc",
            "26368c7043825393",
            "380abdd768c2d388",
            "2e898161279e0cbc",
            "0bc1423b3c1ddeb3",
            "7e3f547e6bf31d94",
            "1ea28b5d8bf06c61",
            "049e34c17924a20c",
            "e7f3a672b7c86fd4",
            "72d3bed9ac168fc4",
            "8277e70fbe35e9be",
            "ee46d646d85b4093",
            "742297b4027fb3b3",
            "f68dcbda10c6eafe",
            "6f825593e39d969a",
            "397f2a3f2adbcd36",
            "0027d49a3167fb91",
            "10107c25ee6f9796",
            "75f7e47a45c618b5",
            "8a3d90357e21ea9d",
            "b279349b08d6ea19",
            "113425ade93cb609",
            "60e836c8e68275ee",
            "2d710acb2c28694d",
            "fcb016b7b7f180bc",
            "6224d6daab668802",
            "c2cbed8b0521ed34",
            "b9e6830802d5c2bc",
            "2b9f593499b3e626",
            "7e4b186e18751761",
            "3697da2e3808efed",
            "1f1e3f2f5eda0939",
            "0ac94426ca056bce",
            "8fc3be9482f68e0b",
            "7f0f0ae7329bb8a5",
            "c1c0513de8830909",
            "00031269e26e89c7",
            "03b55fa88c75ebba",
            "235c39cad72a3abd",
            "a7b301dc1404c72b",
            "a2ff8de08cc6509c",
            "0bd338a05d466313",
            "bf0de18f532ee967",
            "c0711c6ef4c85c8e"
        ],
        "x": 134,
        "y": 1019,
        "w": 1872,
        "h": 942
    },
    {
        "id": "3bd0488aadbf561c",
        "type": "file in",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "",
        "filename": "/home/iota/shared/Book.xlsx",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 560,
        "y": 200,
        "wires": [
            [
                "5ea0e0cb4213621b"
            ]
        ]
    },
    {
        "id": "5ea0e0cb4213621b",
        "type": "xlsx",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "die_data",
        "sheets": "first",
        "multi": "one",
        "parse": "rows",
        "map": "",
        "x": 800,
        "y": 200,
        "wires": [
            [
                "27e4b7598d5cf415",
                "cb146e4734dd3c4b"
            ]
        ]
    },
    {
        "id": "27e4b7598d5cf415",
        "type": "join",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1010,
        "y": 240,
        "wires": [
            [
                "b0d51d5e404ea218",
                "502ebdeb3aa19a6e"
            ]
        ]
    },
    {
        "id": "601cc5a41907f055",
        "type": "inject",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "xls",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "3bd0488aadbf561c"
            ]
        ]
    },
    {
        "id": "07ac7b177d155a3f",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 240,
        "wires": []
    },
    {
        "id": "502ebdeb3aa19a6e",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "function 6",
        "func": "//var d = new Date();\n\n// var newMsg = {payload: msg.payload.xls[1][0]}\n/*\nvar l ={x: msg.payload.xls.length}\n\n\n\nvar rfid = msg.payload.RFID.slice(5,15)\nvar esp = msg.payload.RFID.slice(16,21)\n// var sum = 0\n//for(let i=1; i<=(msg.payload.xls.length); i++){\nfor( i=1; i<=l.x; i++){\n     //i = Number.parseInt(i);\n    // sum = sum + i\n\n    if (msg.payload.xls[i][0] == rfid.toString()){\n    // if (msg.payload.xls[i][0] == \"0x53ae22ad\" ){\n    var newMsg = { tool_id: msg.payload.xls[i][1], Part: msg.payload.xls[i][2], Operation: msg.payload.xls[i][3], Station_id:esp }\n    // if (msg.payload.xls[2][0] == rfid.toString()){\n    // var newMsg = { tool_id: msg.payload.xls[2][1], Part: msg.payload.xls[2][2], Operation: msg.payload.xls[2][3], Station_id:esp }\n    \n}\n}\n// var newMsg ={summation : sum}\n\nreturn newMsg;\n\n*/\nvar d = new Date()\n\n\nvar newMsg = {};\nvar l = { x: msg.payload.xls.length };\n\nvar rfid = msg.payload.RFID.slice(5, 15);\nvar esp = msg.payload.RFID.slice(16, 21);\n\nfor (var i = 0; i < l.x; i++) {\n    if (msg.payload.xls[i] && msg.payload.xls[i][0] == rfid.toString()) {\n        newMsg.payload = {\n            tool_id: msg.payload.xls[i][1],\n            Part: msg.payload.xls[i][2],\n            Operation: msg.payload.xls[i][3],\n            Station_id: esp,\n            Date:d.getDate()+\"/\"+(d.getMonth()+1)+ \"/\"+ d.getFullYear(),\n            Time: d.getHours()+\":\"+d.getMinutes()\n            //srvtime:new Date(Date.now()+(5*60*60*1000))\n           // srvtime:new Date(new Date().getTime()+5*3600*1000)\n\n        };\n        break; // Once found, exit the loop\n    }\n}\n\nreturn newMsg;\n\n\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 280,
        "wires": [
            [
                "391994193fadc14b",
                "07ac7b177d155a3f"
            ]
        ]
    },
    {
        "id": "b0d51d5e404ea218",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 180,
        "wires": []
    },
    {
        "id": "cb146e4734dd3c4b",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 160,
        "wires": []
    },
    {
        "id": "70fc9b47bdc6f606",
        "type": "mqtt in",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "",
        "topic": "RFID",
        "qos": "2",
        "datatype": "utf8",
        "broker": "e1825ce9bc1c0008",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 790,
        "y": 260,
        "wires": [
            [
                "27e4b7598d5cf415"
            ]
        ]
    },
    {
        "id": "391994193fadc14b",
        "type": "json",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "",
        "property": "object",
        "action": "",
        "pretty": false,
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "363571e66386a051"
            ]
        ]
    },
    {
        "id": "363571e66386a051",
        "type": "csv",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "tool_id,Part,Operation,Station_id,Date,Time",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1490,
        "y": 380,
        "wires": [
            [
                "194b76430657fb59"
            ]
        ]
    },
    {
        "id": "194b76430657fb59",
        "type": "file",
        "z": "c8b302ecab9126ef",
        "g": "6bdeed4c911a4f0d",
        "name": "",
        "filename": "/home/iota/shared/trial.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1710,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "1e2cfd022475fa8c",
        "type": "inject",
        "z": "c8b302ecab9126ef",
        "g": "915a2d584c24d2c9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 640,
        "wires": [
            [
                "76d4ac5f7af7eefa"
            ]
        ]
    },
    {
        "id": "76d4ac5f7af7eefa",
        "type": "file in",
        "z": "c8b302ecab9126ef",
        "g": "915a2d584c24d2c9",
        "name": "",
        "filename": "/home/iota/shared/trial.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 531,
        "y": 640,
        "wires": [
            [
                "74bda8dec789202c"
            ]
        ]
    },
    {
        "id": "74bda8dec789202c",
        "type": "csv",
        "z": "c8b302ecab9126ef",
        "g": "915a2d584c24d2c9",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 750,
        "y": 640,
        "wires": [
            [
                "715e6023211d2cb6",
                "96c3de74874e3d7e"
            ]
        ]
    },
    {
        "id": "715e6023211d2cb6",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "915a2d584c24d2c9",
        "name": "debug 46",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 580,
        "wires": []
    },
    {
        "id": "96c3de74874e3d7e",
        "type": "sort",
        "z": "c8b302ecab9126ef",
        "g": "915a2d584c24d2c9",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "payload",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 930,
        "y": 640,
        "wires": [
            [
                "b3b7167e58b584e2"
            ]
        ]
    },
    {
        "id": "ae6cf08452c725d7",
        "type": "ui_table",
        "z": "c8b302ecab9126ef",
        "g": "915a2d584c24d2c9",
        "group": "77d63e1276a26d3e",
        "name": "",
        "order": 1,
        "width": 17,
        "height": 5,
        "columns": [
            {
                "field": "col5",
                "title": "Date",
                "width": "80",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col6",
                "title": "Time",
                "width": "50",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col1",
                "title": "Tool ID",
                "width": "",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col2",
                "title": "Part Name",
                "width": "",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col3",
                "title": "Operation",
                "width": "",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col4",
                "title": "Station ID",
                "width": "60",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1250,
        "y": 640,
        "wires": []
    },
    {
        "id": "b3b7167e58b584e2",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "915a2d584c24d2c9",
        "name": "color",
        "func": "var datas = msg.payload;\n\n// Create an array of messages to send to the Table UI node\nvar messages = [];\nfor (var i = 0; i < datas.length; i++) {\n  var data_name = datas[i]['col1'];\n  var message = {};\n  if (data_name === 'YY FIG ECN 01 . 3/4 .1') {\n    message = {\n      \"col1\": \"<b style='color:red'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:red'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:red'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:red'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:red'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:red'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  } else if (data_name === 'YY FIG YRA 00 . 1/5 . 1') {\n    message = {\n      \"col1\": \"<b style='color:green'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:green'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:green'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:green'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:green'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:green'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  } else {\n    message = {\n      \"col1\": \"<b style='color:blue'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:blue'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:blue'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:blue'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:blue'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:blue'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  }\n  messages.push(message);\n}\n\n// Send the messages to the Table UI node\nmsg.payload = messages;\nnode.send(msg);\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 640,
        "wires": [
            [
                "ae6cf08452c725d7"
            ]
        ]
    },
    {
        "id": "22372ecad94a7938",
        "type": "ui_button",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "group": "7d3e77a46097edfa",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "History",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "history",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"AtomOneTechnologies_RealTime\",\"AtomOneTechnologies_ControlSpecific\",\"AtomOneTechnologies_MMT\"],\"show\":[\"AtomOneTechnologies_Control\",\"AtomOneTechnologies_History\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 1920,
        "wires": [
            [
                "69af323c11bbf3ae"
            ]
        ]
    },
    {
        "id": "69af323c11bbf3ae",
        "type": "ui_ui_control",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "events": "all",
        "x": 500,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "b156db3e5306c31f",
        "type": "ui_button",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "group": "7d3e77a46097edfa",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "RealTime",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "realtime",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"AtomOneTechnologies_History\",\"AtomOneTechnologies_MMT\"],\"show\":[\"AtomOneTechnologies_Control\",\"AtomOneTechnologies_ControlSpecific\",\"AtomOneTechnologies_RealTime\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 220,
        "y": 1860,
        "wires": [
            [
                "69af323c11bbf3ae"
            ]
        ]
    },
    {
        "id": "a42bb2e509bebd40",
        "type": "ui_button",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "group": "68ab243347a61892",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Tool Rack (ESP1)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "toolrack",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"AtomOneTechnologies_History\",\"AtomOneTechnologies_RealTime\"],\"show\":[\"AtomOneTechnologies_Control\",\"AtomOneTechnologies_MMT\",\"AtomOneTechnologies_ControlSpecific\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 1100,
        "wires": [
            [
                "26368c7043825393",
                "7e3f547e6bf31d94",
                "69af323c11bbf3ae"
            ]
        ]
    },
    {
        "id": "5c76309021735119",
        "type": "ui_button",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "group": "68ab243347a61892",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Machine (ESP2)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "machine",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"AtomOneTechnologies_History\",\"AtomOneTechnologies_RealTime\"],\"show\":[\"AtomOneTechnologies_Control\",\"AtomOneTechnologies_MMT\",\"AtomOneTechnologies_ControlSpecific\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 1300,
        "wires": [
            [
                "f68dcbda10c6eafe",
                "10107c25ee6f9796",
                "69af323c11bbf3ae"
            ]
        ]
    },
    {
        "id": "e073d44630296bec",
        "type": "ui_button",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "group": "68ab243347a61892",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Maintenance (ESP3)",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "maintenance",
        "icon": "",
        "payload": "{\"group\":{\"hide\":[\"AtomOneTechnologies_History\",\"AtomOneTechnologies_RealTime\"],\"show\":[\"AtomOneTechnologies_Control\",\"AtomOneTechnologies_MMT\",\"AtomOneTechnologies_ControlSpecific\"]}}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 1480,
        "wires": [
            [
                "6224d6daab668802",
                "7e4b186e18751761",
                "69af323c11bbf3ae"
            ]
        ]
    },
    {
        "id": "48eed64bbf3ca1fc",
        "type": "ui_table",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "group": "814b10eb60723c9a",
        "name": "",
        "order": 1,
        "width": 20,
        "height": 5,
        "columns": [
            {
                "field": "col5",
                "title": "Date",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col6",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col1",
                "title": "Tool ID",
                "width": "",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col2",
                "title": "Part Name",
                "width": "",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col3",
                "title": "Operation",
                "width": "",
                "align": "center",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col4",
                "title": "Station ID",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1930,
        "y": 1300,
        "wires": []
    },
    {
        "id": "26368c7043825393",
        "type": "file in",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "filename": "/home/iota/shared/trial.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 490,
        "y": 1100,
        "wires": [
            [
                "380abdd768c2d388"
            ]
        ]
    },
    {
        "id": "380abdd768c2d388",
        "type": "csv",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 770,
        "y": 1100,
        "wires": [
            [
                "e7f3a672b7c86fd4",
                "235c39cad72a3abd"
            ]
        ]
    },
    {
        "id": "2e898161279e0cbc",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 68",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1200,
        "wires": []
    },
    {
        "id": "0bc1423b3c1ddeb3",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "color",
        "func": "var datas = msg.payload;\n\n// Create an array of messages to send to the Table UI node\nvar messages = [];\nfor (var i = 0; i < datas.length; i++) {\n  var data_name = datas[i]['col1'];\n  var message = {};\n  if (data_name === 'YY FIG ECN 01 . 3/4 .1') {\n    message = {\n      \"col1\": \"<b style='color:red'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:red'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:red'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:red'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:red'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:red'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  } else if (data_name === 'YY FIG YRA 00 . 1/5 . 1') {\n    message = {\n      \"col1\": \"<b style='color:green'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:green'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:green'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:green'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:green'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:green'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  } else {\n    message = {\n      \"col1\": \"<b style='color:blue'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:blue'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:blue'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:blue'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:blue'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:blue'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  }\n  messages.push(message);\n}\n\n// Send the messages to the Table UI node\nmsg.payload = messages;\nnode.send(msg);\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 1120,
        "wires": [
            [
                "48eed64bbf3ca1fc"
            ]
        ]
    },
    {
        "id": "7e3f547e6bf31d94",
        "type": "file in",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "filename": "/home/iota/shared/tool_list.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 550,
        "y": 1160,
        "wires": [
            [
                "1ea28b5d8bf06c61"
            ]
        ]
    },
    {
        "id": "1ea28b5d8bf06c61",
        "type": "csv",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "sep": ";",
        "hdrin": false,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 790,
        "y": 1160,
        "wires": [
            [
                "2e898161279e0cbc",
                "049e34c17924a20c"
            ]
        ]
    },
    {
        "id": "049e34c17924a20c",
        "type": "join",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1070,
        "y": 1140,
        "wires": [
            [
                "72d3bed9ac168fc4",
                "8277e70fbe35e9be"
            ]
        ]
    },
    {
        "id": "e7f3a672b7c86fd4",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 69",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1080,
        "wires": []
    },
    {
        "id": "72d3bed9ac168fc4",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 70",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1060,
        "wires": []
    },
    {
        "id": "8277e70fbe35e9be",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "sorting_by_click",
        "func": "var datas = msg.payload;\n\n  // Create an array of messages to send to the Table UI node\nvar messages = [];\n\nfor (var key in datas[0]) {\n  for (var jj = 0; jj < datas[1].length; jj++) {\n    if (datas[1][jj][\"col1\"] == datas[0][key]) {\n      messages.push(datas[1][jj]);\n      break;\n    }\n  }\n}\n\n  // Send the messages to the debugger/Table UI node\nmsg.payload = messages;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1120,
        "wires": [
            [
                "742297b4027fb3b3"
            ]
        ]
    },
    {
        "id": "ee46d646d85b4093",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 71",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 1060,
        "wires": []
    },
    {
        "id": "742297b4027fb3b3",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "function 16",
        "func": "var datas = msg.payload;\n\nvar messages = [];\nfor (var i = 0; i < datas.length; i++){\n  if (datas[i].col4 == \"ESP1\"){\n    messages.push(datas[i]);\n  }\n}\n  // Send the messages to the debugger/Table UI node\nmsg.payload = messages;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 1120,
        "wires": [
            [
                "ee46d646d85b4093",
                "0bc1423b3c1ddeb3"
            ]
        ]
    },
    {
        "id": "f68dcbda10c6eafe",
        "type": "file in",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "filename": "/home/iota/shared/trial.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 470,
        "y": 1300,
        "wires": [
            [
                "6f825593e39d969a"
            ]
        ]
    },
    {
        "id": "6f825593e39d969a",
        "type": "csv",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 750,
        "y": 1300,
        "wires": [
            [
                "b279349b08d6ea19",
                "a7b301dc1404c72b"
            ]
        ]
    },
    {
        "id": "397f2a3f2adbcd36",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 72",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1400,
        "wires": []
    },
    {
        "id": "0027d49a3167fb91",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "color",
        "func": "var datas = msg.payload;\n\n// Create an array of messages to send to the Table UI node\nvar messages = [];\nfor (var i = 0; i < datas.length; i++) {\n  var data_name = datas[i]['col1'];\n  var message = {};\n  if (data_name === 'YY FIG ECN 01 . 3/4 .1') {\n    message = {\n      \"col1\": \"<b style='color:red'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:red'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:red'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:red'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:red'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:red'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  } else if (data_name === 'YY FIG YRA 00 . 1/5 . 1') {\n    message = {\n      \"col1\": \"<b style='color:green'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:green'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:green'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:green'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:green'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:green'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  } else {\n    message = {\n      \"col1\": \"<b style='color:blue'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:blue'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:blue'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:blue'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:blue'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:blue'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  }\n  messages.push(message);\n}\n\n// Send the messages to the Table UI node\nmsg.payload = messages;\nnode.send(msg);\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 1320,
        "wires": [
            [
                "48eed64bbf3ca1fc"
            ]
        ]
    },
    {
        "id": "10107c25ee6f9796",
        "type": "file in",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "filename": "/home/iota/shared/tool_list.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 530,
        "y": 1360,
        "wires": [
            [
                "75f7e47a45c618b5"
            ]
        ]
    },
    {
        "id": "75f7e47a45c618b5",
        "type": "csv",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "sep": ";",
        "hdrin": false,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 770,
        "y": 1360,
        "wires": [
            [
                "397f2a3f2adbcd36",
                "8a3d90357e21ea9d"
            ]
        ]
    },
    {
        "id": "8a3d90357e21ea9d",
        "type": "join",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1050,
        "y": 1340,
        "wires": [
            [
                "113425ade93cb609",
                "60e836c8e68275ee"
            ]
        ]
    },
    {
        "id": "b279349b08d6ea19",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 73",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1280,
        "wires": []
    },
    {
        "id": "113425ade93cb609",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 74",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 1220,
        "wires": []
    },
    {
        "id": "60e836c8e68275ee",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "sorting_by_click",
        "func": "var datas = msg.payload;\n\n  // Create an array of messages to send to the Table UI node\nvar messages = [];\n\nfor (var key in datas[0]) {\n  for (var jj = 0; jj < datas[1].length; jj++) {\n    if (datas[1][jj][\"col1\"] == datas[0][key]) {\n      messages.push(datas[1][jj]);\n      break;\n    }\n  }\n}\n\n  // Send the messages to the debugger/Table UI node\nmsg.payload = messages;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 1320,
        "wires": [
            [
                "fcb016b7b7f180bc",
                "03b55fa88c75ebba"
            ]
        ]
    },
    {
        "id": "2d710acb2c28694d",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 75",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 1260,
        "wires": []
    },
    {
        "id": "fcb016b7b7f180bc",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "function 17",
        "func": "var datas = msg.payload;\n\nvar messages = [];\nfor (var i = 0; i < datas.length; i++){\n  if (datas[i].col4 == \"ESP2\"){\n    messages.push(datas[i]);\n  }\n}\n  // Send the messages to the debugger/Table UI node\nmsg.payload = messages;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 1320,
        "wires": [
            [
                "2d710acb2c28694d",
                "0027d49a3167fb91"
            ]
        ]
    },
    {
        "id": "6224d6daab668802",
        "type": "file in",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "filename": "/home/iota/shared/trial.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 530,
        "y": 1480,
        "wires": [
            [
                "c2cbed8b0521ed34"
            ]
        ]
    },
    {
        "id": "c2cbed8b0521ed34",
        "type": "csv",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 810,
        "y": 1480,
        "wires": [
            [
                "0ac94426ca056bce",
                "a2ff8de08cc6509c"
            ]
        ]
    },
    {
        "id": "b9e6830802d5c2bc",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 76",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1580,
        "wires": []
    },
    {
        "id": "2b9f593499b3e626",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "color",
        "func": "var datas = msg.payload;\n\n// Create an array of messages to send to the Table UI node\nvar messages = [];\nfor (var i = 0; i < datas.length; i++) {\n  var data_name = datas[i]['col1'];\n  var message = {};\n  if (data_name === 'YY FIG ECN 01 . 3/4 .1') {\n    message = {\n      \"col1\": \"<b style='color:red'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:red'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:red'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:red'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:red'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:red'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  } else if (data_name === 'YY FIG YRA 00 . 1/5 . 1') {\n    message = {\n      \"col1\": \"<b style='color:green'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:green'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:green'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:green'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:green'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:green'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  } else {\n    message = {\n      \"col1\": \"<b style='color:blue'>\" + datas[i]['col1'] + \"</b>\",\n      \"col2\": \"<b style='color:blue'>\" + datas[i]['col2'] + \"</b>\",\n      \"col3\": \"<b style='color:blue'>\" + datas[i]['col3'] + \"</b>\",\n      \"col4\": \"<b style='color:blue'>\" + datas[i]['col4'] + \"</b>\",\n      \"col5\": \"<b style='color:blue'>\" + datas[i]['col5'] + \"</b>\",\n      \"col6\": \"<b style='color:blue'>\" + datas[i]['col6'] + \"</b>\"\n    };\n  }\n  messages.push(message);\n}\n\n// Send the messages to the Table UI node\nmsg.payload = messages;\nnode.send(msg);\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 1500,
        "wires": [
            [
                "48eed64bbf3ca1fc"
            ]
        ]
    },
    {
        "id": "7e4b186e18751761",
        "type": "file in",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "filename": "/home/iota/shared/tool_list.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 590,
        "y": 1540,
        "wires": [
            [
                "3697da2e3808efed"
            ]
        ]
    },
    {
        "id": "3697da2e3808efed",
        "type": "csv",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "sep": ";",
        "hdrin": false,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 830,
        "y": 1540,
        "wires": [
            [
                "b9e6830802d5c2bc",
                "1f1e3f2f5eda0939"
            ]
        ]
    },
    {
        "id": "1f1e3f2f5eda0939",
        "type": "join",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1090,
        "y": 1500,
        "wires": [
            [
                "8fc3be9482f68e0b",
                "7f0f0ae7329bb8a5"
            ]
        ]
    },
    {
        "id": "0ac94426ca056bce",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 77",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1440,
        "wires": []
    },
    {
        "id": "8fc3be9482f68e0b",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 78",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1440,
        "wires": []
    },
    {
        "id": "7f0f0ae7329bb8a5",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "sorting_by_click",
        "func": "var datas = msg.payload;\n\n  // Create an array of messages to send to the Table UI node\nvar messages = [];\n\nfor (var key in datas[0]) {\n  for (var jj = 0; jj < datas[1].length; jj++) {\n    if (datas[1][jj][\"col1\"] == datas[0][key]) {\n      messages.push(datas[1][jj]);\n      break;\n    }\n  }\n}\n\n  // Send the messages to the debugger/Table UI node\nmsg.payload = messages;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1500,
        "wires": [
            [
                "00031269e26e89c7"
            ]
        ]
    },
    {
        "id": "c1c0513de8830909",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 79",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1700,
        "y": 1440,
        "wires": []
    },
    {
        "id": "00031269e26e89c7",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "function 18",
        "func": "var datas = msg.payload;\n\nvar messages = [];\nfor (var i = 0; i < datas.length; i++){\n  if (datas[i].col4 == \"ESP3\"){\n    messages.push(datas[i]);\n  }\n}\n  // Send the messages to the debugger/Table UI node\nmsg.payload = messages;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1500,
        "wires": [
            [
                "c1c0513de8830909",
                "2b9f593499b3e626"
            ]
        ]
    },
    {
        "id": "03b55fa88c75ebba",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 80",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 1240,
        "wires": []
    },
    {
        "id": "235c39cad72a3abd",
        "type": "sort",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "payload",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 890,
        "y": 1120,
        "wires": [
            [
                "049e34c17924a20c"
            ]
        ]
    },
    {
        "id": "a7b301dc1404c72b",
        "type": "sort",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "payload",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 870,
        "y": 1320,
        "wires": [
            [
                "8a3d90357e21ea9d"
            ]
        ]
    },
    {
        "id": "a2ff8de08cc6509c",
        "type": "sort",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "payload",
        "targetType": "msg",
        "msgKey": "payload",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 950,
        "y": 1480,
        "wires": [
            [
                "1f1e3f2f5eda0939",
                "0bd338a05d466313"
            ]
        ]
    },
    {
        "id": "0bd338a05d466313",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "name": "debug 81",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 1400,
        "wires": []
    },
    {
        "id": "bf0de18f532ee967",
        "type": "ui_text",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "group": "2bcb426a1a0c221a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Tool Tracking",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "title",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 270,
        "y": 1720,
        "wires": []
    },
    {
        "id": "c0711c6ef4c85c8e",
        "type": "ui_template",
        "z": "c8b302ecab9126ef",
        "g": "285efb983012b133",
        "group": "2bcb426a1a0c221a",
        "name": "CSS",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .title{\n       font-size: 1.8em;\n       color:black !important;\n       border-left: 6px solid orange; \n    }\n    .maintenance button:hover{\n    /*width: 50;*/\n    background-color:#4CAF50;\n    color:black !important;\n    }\n    .maintenance button{\n    border: none;\n    border-radius: 20px;\n    /*clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);*/\n    text-align: center;\n    width: 50;\n    transition-duration: 0.4s;\n    background-color: red !important;\n    color:black;\n    }\n    .machine button:hover{\n    /*width: 50;*/\n    background-color:#4CAF50;\n    color:black !important;\n    }\n    .machine button{\n    border: none;\n    border-radius: 20px;\n    /*clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);*/\n    text-align: center;\n    width: 50;\n    transition-duration: 0.4s;\n    background-color: green !important;\n    color:black;\n    }\n    .toolrack button:hover{\n    /*width: 50;*/\n    background-color:#4CAF50;\n    color:black !important;\n    }\n    .toolrack button{\n    border: none;\n    border-radius: 20px;\n    /*clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);*/\n    text-align: center;\n    width: 50;\n    transition-duration: 0.4s;\n    background-color: #FFFF99 !important;\n    color:black;\n    }\n    .realtime button:hover{\n    /*width: 50;*/\n    background-color:#4CAF50;\n    color:black !important;\n    }\n    .realtime button{\n    border: none;\n    /*border-radius: 8px;*/\n    /*clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);*/\n    text-align: center;\n    width: 50;\n    transition-duration: 0.4s;\n    /*background-color: #FFFF99 !important;*/\n    color:black;\n    }\n    .history button:hover{\n    /*width: 50;*/\n    background-color:#4CAF50;\n    color:black !important;\n    }\n    .history button{\n    border: none;\n    /*border-radius: 20px;*/\n    /*clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);*/\n    text-align: center;\n    width: 50;\n    transition-duration: 0.4s;\n    /*background-color: #FFFF99 !important;*/\n    color:black;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "70b264928d4a5ca4",
        "type": "file in",
        "z": "c8b302ecab9126ef",
        "name": "",
        "filename": "/home/iota/shared/trial.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 2070,
        "y": 940,
        "wires": [
            [
                "8161d469b19515c2"
            ]
        ]
    },
    {
        "id": "8161d469b19515c2",
        "type": "csv",
        "z": "c8b302ecab9126ef",
        "name": "",
        "sep": ",",
        "hdrin": false,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2270,
        "y": 940,
        "wires": [
            [
                "b243f200fe76454f",
                "70f290911fc8c7a2"
            ]
        ]
    },
    {
        "id": "69ec3c94b59cd9d4",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "name": "debug 111",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2640,
        "y": 960,
        "wires": []
    },
    {
        "id": "70f290911fc8c7a2",
        "type": "function",
        "z": "c8b302ecab9126ef",
        "name": "function 32",
        "func": "// Get the flow variable from the dashboard\n\nvar ToolID = flow.get(\"ToolID\");\nvar searchDate = flow.get(\"searchDate\");\n\nif (typeof ToolID === 'undefined') {\n    var ToolIDN = '';\n}\nelse{\n    ToolIDN = ToolID;\n}\n\nflow.set(\"ToolIDN\",ToolIDN)\n\n// var newMsg = {};\n\n// var l = { x: msg.payload.xls.length };\n\nvar l = {x: msg.payload.length}\nvar array = [];\n// var rfid = msg.payload.RFID.slice(5, 15);\n\n// var esp = msg.payload.RFID.slice(16, 21);\n\nif (ToolIDN != \"\" && searchDate != \"\" ){\n    for (var i = 0; i < l.x; i++) {\n        if (msg.payload[i][\"col1\"] == ToolIDN && msg.payload[i][\"col5\"] == searchDate) {\n            array.push(msg.payload[i])\n        }\n    }\n}\nelse if (ToolIDN == \"\" && searchDate != \"\" ){\n    for (var i = 0; i < l.x; i++) {\n        if (msg.payload[i][\"col5\"] == searchDate) {\n            array.push(msg.payload[i])\n        }\n    }\n}\nelse if (ToolIDN != \"\" && searchDate == \"\" ){\n    for (var i = 0; i < l.x; i++) {\n        if (msg.payload[i][\"col1\"] == ToolIDN ) {\n            array.push(msg.payload[i])\n        }\n    }\n}\n    \n//     else{\n//         var newMsg = { pass: 0}\n//     }\n// }\n// for (var i = 0; i < l.x; i++) {\n//     if (msg.payload.xls[i] && msg.payload.xls[i][0] == rfid.toString()) {\n//         newMsg.payload = {\n//             tool_id: msg.payload.xls[i][1],\n//             Part: msg.payload.xls[i][2],\n//             Operation: msg.payload.xls[i][3],\n//             Station_id: esp,\n//             Date:d.getDate()+\"/\"+(d.getMonth()+1)+ \"/\"+ d.getFullYear(),\n//             Time: d.getHours()+\":\"+d.getMinutes()\n//             //srvtime:new Date(Date.now()+(5*60*60*1000))\n//            // srvtime:new Date(new Date().getTime()+5*3600*1000)\n\n//         };\n//         break; // Once found, exit the loop\n//     }\n// }\n// var newMsg = [{payload: ToolID},{paylaod:searchDateN},{payload: array}];\n// return newMsg;\nreturn [{ payload: ToolIDN }, { payload: searchDate }, { payload: array }]",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 960,
        "wires": [
            [
                "69ec3c94b59cd9d4"
            ],
            [
                "09bf757e069c2a3d"
            ],
            [
                "b7c7ac1d7fb63f02",
                "bea9faecd1d83b83"
            ]
        ]
    },
    {
        "id": "bea9faecd1d83b83",
        "type": "ui_table",
        "z": "c8b302ecab9126ef",
        "group": "16a5a776562df867",
        "name": "",
        "order": 8,
        "width": 17,
        "height": 7,
        "columns": [
            {
                "field": "col5",
                "title": "Date",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col6",
                "title": "Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col1",
                "title": "Tool ID",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col2",
                "title": "Part Name",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col3",
                "title": "Operation",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "col4",
                "title": "Station ID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 2590,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b243f200fe76454f",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "name": "debug 112",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2490,
        "y": 900,
        "wires": []
    },
    {
        "id": "c57ef54caaf709d3",
        "type": "link in",
        "z": "c8b302ecab9126ef",
        "name": "link in 2",
        "links": [
            "03870448300d9c2c"
        ],
        "x": 1845,
        "y": 940,
        "wires": [
            [
                "70b264928d4a5ca4"
            ]
        ]
    },
    {
        "id": "09bf757e069c2a3d",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "name": "debug 113",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2690,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b7c7ac1d7fb63f02",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "name": "debug 114",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2640,
        "y": 1240,
        "wires": []
    },
    {
        "id": "7e51c5ae0c1632d6",
        "type": "ui_dropdown",
        "z": "c8b302ecab9126ef",
        "g": "770286e3d1c7a053",
        "name": "",
        "label": "Tool ID",
        "tooltip": "",
        "place": "Select option",
        "group": "16a5a776562df867",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "YY FIG ECN 01 . 3/4 .1",
                "value": "YY FIG ECN 01 . 3/4 .1",
                "type": "str"
            },
            {
                "label": "YY FIG YRA 00 . 1/5 . 1",
                "value": "YY FIG YRA 00 . 1/5 . 1",
                "type": "str"
            },
            {
                "label": "YY FIG YRA1 03 . 3/4 . 1",
                "value": "YY FIG YRA1 03 . 3/4 . 1",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 2040,
        "y": 680,
        "wires": [
            [
                "60748ae584709fa8",
                "617e259f288aecab"
            ]
        ]
    },
    {
        "id": "617e259f288aecab",
        "type": "change",
        "z": "c8b302ecab9126ef",
        "g": "770286e3d1c7a053",
        "name": "set ToolID",
        "rules": [
            {
                "t": "set",
                "p": "ToolID",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2380,
        "y": 680,
        "wires": [
            [
                "57094e99300d0069"
            ]
        ]
    },
    {
        "id": "57094e99300d0069",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "770286e3d1c7a053",
        "name": "set ToolID as Variable",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2600,
        "y": 680,
        "wires": []
    },
    {
        "id": "aaabd3f78d516240",
        "type": "ui_form",
        "z": "c8b302ecab9126ef",
        "g": "770286e3d1c7a053",
        "name": "",
        "label": "",
        "group": "16a5a776562df867",
        "order": 1,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Date",
                "value": "date",
                "type": "date",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "date": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 1850,
        "y": 740,
        "wires": [
            [
                "e9e6b70ee0f9419f",
                "1359ed7e1f12049c"
            ]
        ]
    },
    {
        "id": "0e39798716b74694",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "770286e3d1c7a053",
        "name": "debug 115",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.date",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2470,
        "y": 820,
        "wires": []
    },
    {
        "id": "e9e6b70ee0f9419f",
        "type": "moment",
        "z": "c8b302ecab9126ef",
        "g": "770286e3d1c7a053",
        "name": "",
        "topic": "",
        "input": "payload.date",
        "inputType": "msg",
        "inTz": "Asia/Calcutta",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MM-YYYY",
        "locale": "en-GB",
        "output": "payload.date",
        "outputType": "msg",
        "outTz": "Asia/Calcutta",
        "x": 2240,
        "y": 740,
        "wires": [
            [
                "3b3246ce2b8f50d8"
            ]
        ]
    },
    {
        "id": "1359ed7e1f12049c",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "770286e3d1c7a053",
        "name": "debug 116",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.date",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2180,
        "y": 820,
        "wires": []
    },
    {
        "id": "3b3246ce2b8f50d8",
        "type": "change",
        "z": "c8b302ecab9126ef",
        "g": "770286e3d1c7a053",
        "name": "set Date",
        "rules": [
            {
                "t": "set",
                "p": "searchDate",
                "pt": "flow",
                "to": "payload.date",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2440,
        "y": 740,
        "wires": [
            [
                "0e39798716b74694",
                "03870448300d9c2c"
            ]
        ]
    },
    {
        "id": "60748ae584709fa8",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "770286e3d1c7a053",
        "name": "debug 117",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2190,
        "y": 640,
        "wires": []
    },
    {
        "id": "03870448300d9c2c",
        "type": "link out",
        "z": "c8b302ecab9126ef",
        "g": "770286e3d1c7a053",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "c57ef54caaf709d3"
        ],
        "x": 2565,
        "y": 740,
        "wires": []
    },
    {
        "id": "e0b9f96e58ea19a3",
        "type": "change",
        "z": "c8b302ecab9126ef",
        "g": "b13a37b40a5db1bf",
        "name": "set ToolID",
        "rules": [
            {
                "t": "delete",
                "p": "ToolID",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "searchDate",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2100,
        "y": 520,
        "wires": [
            [
                "56586c4278158ee4"
            ]
        ]
    },
    {
        "id": "94dd57e04b45d3b7",
        "type": "ui_button",
        "z": "c8b302ecab9126ef",
        "g": "b13a37b40a5db1bf",
        "name": "",
        "group": "16a5a776562df867",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1810,
        "y": 520,
        "wires": [
            [
                "e0b9f96e58ea19a3",
                "7e51c5ae0c1632d6"
            ]
        ]
    },
    {
        "id": "56586c4278158ee4",
        "type": "debug",
        "z": "c8b302ecab9126ef",
        "g": "b13a37b40a5db1bf",
        "name": "Delete confirmation",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2360,
        "y": 520,
        "wires": []
    },
    {
        "id": "047dfc7a18cee0fa",
        "type": "ui_spacer",
        "z": "c8b302ecab9126ef",
        "name": "spacer",
        "group": "9025e9b8f3af6890",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "ec524bbc3ed3c617",
        "type": "ui_spacer",
        "z": "c8b302ecab9126ef",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 22,
        "height": 1
    },
    {
        "id": "78233e3f75039d1e",
        "type": "ui_spacer",
        "z": "c8b302ecab9126ef",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "7fe5eeec19bc43f4",
        "type": "ui_spacer",
        "z": "c8b302ecab9126ef",
        "name": "spacer",
        "group": "68ab243347a61892",
        "order": 1,
        "width": 3,
        "height": 1
    },
    {
        "id": "e4e49dcec1df462b",
        "type": "ui_spacer",
        "z": "c8b302ecab9126ef",
        "name": "spacer",
        "group": "68ab243347a61892",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "5880e8fd98fcf2e8",
        "type": "ui_spacer",
        "z": "c8b302ecab9126ef",
        "name": "spacer",
        "group": "68ab243347a61892",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "a81d4d406f1c57c0",
        "type": "ui_spacer",
        "z": "c8b302ecab9126ef",
        "name": "spacer",
        "group": "16a5a776562df867",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "6c113bebf2fabf25",
        "type": "ui_spacer",
        "z": "c8b302ecab9126ef",
        "name": "spacer",
        "group": "16a5a776562df867",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "9987d6f6badc73b8",
        "type": "ui_spacer",
        "z": "c8b302ecab9126ef",
        "name": "spacer",
        "group": "16a5a776562df867",
        "order": 6,
        "width": 13,
        "height": 1
    },
    {
        "id": "9c307115dba30fd8",
        "type": "ui_spacer",
        "z": "c8b302ecab9126ef",
        "name": "spacer",
        "group": "16a5a776562df867",
        "order": 7,
        "width": 17,
        "height": 1
    },
    {
        "id": "e1825ce9bc1c0008",
        "type": "mqtt-broker",
        "name": "RPi broker",
        "broker": "10.3.141.1",
        "port": "1883",
        "clientid": "Node_red_h",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "77d63e1276a26d3e",
        "type": "ui_group",
        "name": "RealTime",
        "tab": "e24139a940a737f3",
        "order": 4,
        "disp": true,
        "width": 17,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7d3e77a46097edfa",
        "type": "ui_group",
        "name": "Control",
        "tab": "e24139a940a737f3",
        "order": 2,
        "disp": false,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "68ab243347a61892",
        "type": "ui_group",
        "name": "ControlSpecific",
        "tab": "e24139a940a737f3",
        "order": 3,
        "disp": false,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "814b10eb60723c9a",
        "type": "ui_group",
        "name": "MMT",
        "tab": "e24139a940a737f3",
        "order": 6,
        "disp": false,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2bcb426a1a0c221a",
        "type": "ui_group",
        "name": "Heading",
        "tab": "e24139a940a737f3",
        "order": 1,
        "disp": false,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "16a5a776562df867",
        "type": "ui_group",
        "name": "History",
        "tab": "e24139a940a737f3",
        "order": 5,
        "disp": true,
        "width": 17,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e24139a940a737f3",
        "type": "ui_tab",
        "name": "AtomOneTechnologies",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    }
]